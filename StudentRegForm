import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class StudentFormApp extends JFrame {

    // GUI Components
    private JTextField nameField, rollField, ageField, deptField, emailField;
    private JButton submitButton, clearButton;

    // Database details (update these)
    private final String DB_URL = "jdbc:mysql://localhost:3306/student_db";
    private final String DB_USER = "root";
    private final String DB_PASS = "your_password";

    public StudentFormApp() {
        setTitle("ðŸŽ“ Student Registration Form");
        setSize(450, 400);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout(10, 10));

        // === Title ===
        JLabel title = new JLabel("Student Details Entry", SwingConstants.CENTER);
        title.setFont(new Font("Segoe UI", Font.BOLD, 22));
        add(title, BorderLayout.NORTH);

        // === Input Panel ===
        JPanel panel = new JPanel(new GridLayout(6, 2, 10, 10));
        panel.setBorder(BorderFactory.createEmptyBorder(20, 30, 20, 30));

        panel.add(new JLabel("Name:"));
        nameField = new JTextField();
        panel.add(nameField);

        panel.add(new JLabel("Roll No:"));
        rollField = new JTextField();
        panel.add(rollField);

        panel.add(new JLabel("Age:"));
        ageField = new JTextField();
        panel.add(ageField);

        panel.add(new JLabel("Department:"));
        deptField = new JTextField();
        panel.add(deptField);

        panel.add(new JLabel("Email:"));
        emailField = new JTextField();
        panel.add(emailField);

        add(panel, BorderLayout.CENTER);

        // === Button Panel ===
        JPanel buttonPanel = new JPanel();
        submitButton = new JButton("Submit");
        clearButton = new JButton("Clear");
        buttonPanel.add(submitButton);
        buttonPanel.add(clearButton);
        add(buttonPanel, BorderLayout.SOUTH);

        // === Action Listeners ===
        submitButton.addActionListener(e -> saveStudent());
        clearButton.addActionListener(e -> clearFields());

        setVisible(true);
    }

    // === Input Validation ===
    private boolean validateInputs() {
        if (nameField.getText().trim().isEmpty() ||
            rollField.getText().trim().isEmpty() ||
            ageField.getText().trim().isEmpty() ||
            deptField.getText().trim().isEmpty() ||
            emailField.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all fields!");
            return false;
        }

        try {
            Integer.parseInt(ageField.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Age must be a number!");
            return false;
        }

        try {
            Integer.parseInt(rollField.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Roll No must be a number!");
            return false;
        }

        if (!emailField.getText().contains("@") || !emailField.getText().contains(".")) {
            JOptionPane.showMessageDialog(this, "Enter a valid email address!");
            return false;
        }

        return true;
    }

    // === Save Student to Database ===
    private void saveStudent() {
        if (!validateInputs()) return;

        String name = nameField.getText().trim();
        int roll = Integer.parseInt(rollField.getText().trim());
        int age = Integer.parseInt(ageField.getText().trim());
        String dept = deptField.getText().trim();
        String email = emailField.getText().trim();

        try (Connection con = DriverManager.getConnection(DB_URL, DB_USER, DB_PASS)) {
            String sql = "INSERT INTO students (name, roll_no, age, department, email) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, name);
            pst.setInt(2, roll);
            pst.setInt(3, age);
            pst.setString(4, dept);
            pst.setString(5, email);
            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Student added successfully!");
            clearFields();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database Error: " + e.getMessage());
        }
    }

    // === Clear Fields ===
    private void clearFields() {
        nameField.setText("");
        rollField.setText("");
        ageField.setText("");
        deptField.setText("");
        emailField.setText("");
    }

    public static void main(String[] args) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); // Load MySQL driver
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "MySQL JDBC Driver not found!");
            return;
        }
        SwingUtilities.invokeLater(StudentFormApp::new);
    }
}
